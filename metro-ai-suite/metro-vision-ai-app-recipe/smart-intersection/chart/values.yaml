# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
namespace:
replicaCount: 1
http_proxy: 
https_proxy: 
no_proxy: 

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
ntpserver:
  # This is the image repository
  repository: docker.io/dockurr/chrony
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "4.6.1"

nodered:
  # This is the image repository
  repository: docker.io/nodered/node-red
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  # Overrides the storage class name
  storageClassName: "standard"

broker:
  # Image settings
  repository: eclipse-mosquitto
  tag: 2.0.21
  pullPolicy: IfNotPresent

  # UID:GID to run container as (defaulting to 1000:1000 unless overridden)
  uid: 1000
  gid: 1000

  # # Secret name containing TLS certs or other secrets (matches mounted secrets in Deployment)
  # secretName: broker-secrets

  # Enable websocket listener
  enableWebsockets: true

influxdb:
  # Image settings
  repository: influxdb
  tag: 2.7.11
  pullPolicy: IfNotPresent

  # Initialization parameters
  org: ITM
  bucket: SS-Anthem
  retention: 1w

  # Service configuration
  service:
    type: ClusterIP
    port: 8086

  # Optional: storage class (used if you add PVCs later)
  storageClassName: "standard"
  storageSize: "1Gi"

grafana:
  repository: grafana/grafana
  tag: 11.6.0
  pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 3000

  admin:
    tokenSecretName: influxdb2-admin-token
  dashboards:
    anthemIntersection: anthem-intersection.json
  provisioning:
    dashboards: dashboards.yml
    datasources: datasources.yml
  volumes:
    dashboards: /var/lib/grafana/dashboards
    provisioning: /etc/grafana/provisioning
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 1Gi

scene:
  repository: docker.io/intel/scenescape-controller
  tag: "v1.3.0"
  pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80

pgserver:
  repository: docker.io/intel/scenescape-manager
  tag: "v1.3.0"
  pullPolicy: IfNotPresent

  storageClassName: "hostpath"
  storage:
    db: 2Gi
    migrations: 1Gi
    media: 1Gi

web:
  replicas: 1
  image:
    repository: docker.io/intel/scenescape-manager
    tag: "v1.3.0"
    pullPolicy: IfNotPresent
  dbhost: pgserver
  broker: broker.scenescape.intel.com
  service:
    type: NodePort

dlstreamerPipelineServer:
  # This is the image repository
  repository: docker.io/intel/dlstreamer-pipeline-server
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "3.0.0"
  # Overrides the storage class name
  storageClassName: "standard"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
