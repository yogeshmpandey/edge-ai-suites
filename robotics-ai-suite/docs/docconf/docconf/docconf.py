# SPDX-License-Identifier: Apache-2.0
# Copyright (C) 2025 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions
# and limitations under the License.

"""docconf.py - common configuration for docs sites"""

# this file contains common configuration
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# pylint - sphinx doesn't use UPPER_CASE naming style for constants
# pylint: disable=invalid-name

import os

project = "Robotics AI Suite Documentation"

copyright = "2025, Intel Corporation"  # pylint: disable=redefined-builtin
author = "Intel Corporation"

version = "3.0"
release = version

# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

# strict mode - all warnings are errors
warning_is_error = True

# extensions
extensions = [
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.intersphinx",
    "sphinx_copybutton",
    "sphinx_design",
    "sphinx_favicon",
    "sphinx_sitemap",
    "sphinxcontrib.asciinema",
    #    "sphinxcontrib.images",
    "sphinxcontrib.jquery",
    "sphinxcontrib.mermaid",
    "sphinxcontrib.openapi",
    "sphinxcontrib.spelling",
    "sphinxcontrib.video",
    "sphinx_tabs.tabs",
]

templates_path = ["_templates"]

# exclude these files from processing
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The suffix(es) of source filenames.
source_suffix = {".rst": "restructuredtext"}

# text encoding
source_encoding = "UTF-8"

# The language for content autogenerated by Sphinx.
language = "en"

# The master toctree document (entry point)
master_doc = "index"

# rst_epilog, added to the end of every rst doc
# include substituions in base directory
rst_epilog = """
.. include:: /substitutions.txt
"""

# Create empty dictionary
myst_substitutions = {}

# config for autosectionlabel
# see: https://www.sphinx-doc.org/en/master/usage/extensions/autosectionlabel.html
autosectionlabel_prefix_document = True
autosectionlabel_maxdepth = 3

# list of words that shouldn't fail the spellchecker
spelling_word_list_filename = [
    "../dict.txt",
]

spelling_filters = ["sphinxcontrib.spelling.filters.ContractionFilter"]

spelling_exclude_patterns = [
    "release_notes/containers_helm_charts*",
    "release_notes/third_party_components*",
]

# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output
html_title = "Robotics AI Suite Documentation"
# Conditionally use Spark Sphinx theme if available, fallback to PyData theme
try:
    import spark_sphinx_theme
except ImportError:
    html_theme = "pydata_sphinx_theme"
else:
    html_theme = "spark_sphinx_theme"

# these are specific to the spark_sphinx_theme
html_context = {
    "default_mode": "auto",
    "header_variant": "spark-color",
    "footer_variant": "simple",
    "content_width": "large",
    "color_scheme": "tb",
}
html_theme_options = {
    "navigation_depth": 3,
    "show_toc_level": 1,
    "show_nav_level": 1,
    # "collapse_navigation": False,
    # "navigation_with_keys": True,
    # Navbar Configuration
    # "navbar_start": [],  # Logo on the left
    "navbar_center": ["navbar-nav"],  # Main navigation in the center
    # "navbar_end": ["search-field"],  # Search + Theme Switcher on the right
    "header_links_before_dropdown": 4,
    "logo": {
        "text": "Robotics AI Suite",
        # "image_dark": "_static/logo-dark.svg",
    },
    "show_prev_next": False,
}
# Dynamically add switcher content if switcher_data.txt exists
switcher_data_file = os.path.dirname(os.path.abspath(__file__)) + "/switcher_data.txt"
if os.path.isfile(switcher_data_file):
    with open(switcher_data_file) as file:
        lines = [line.rstrip() for line in file]
    # Switcher URL needs to exist prior to building, so hardcode now and replace later
    html_theme_options_append = {
        "switcher": {
            "json_url": "https://docs.openedgeplatform.intel.com/theme/switcher.json",
            "version_match": f"{lines[1].split()[0]}",
        },
        "navbar_start": ["navbar-logo", "version-switcher"],
    }
    html_theme_options.update(html_theme_options_append)

# common theme options
html_baseurl = "https://docs.openedgeplatform.intel.com/edge-ai-suites/robotics-ai-suite/"
html_favicon = "_static/logo.svg"
html_show_sourcelink = True  # Show source link
html_show_sphinx = False  # Hide "Built with Sphinx"
html_static_path = ["_static"]

# Linkcheck options
linkcheck_timeout = 5
linkcheck_retries = 4

linkcheck_ignore = [
    "https://www.intel.com/",
    "https://ark.intel.com/",
    "../static",  # ignore links to OpenAPI docs
]

# replacement user agent to avoid 403 errors
linkcheck_request_headers = {
    "*": {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
        "AppleWebKit/537.36 (KHTML, like Gecko) "
        "Chrome/134.0.0.0 Safari/537.36",
    }
}

linkcheck_exclude_documents = [
    "release_notes/containers_helm_charts*",
    "release_notes/third_party_components*",
]

# Create empty myst_parser variables to enable /docs/conf.py be
# agnostic with respect to docconf.py or docconf_simple.py
myst_heading_anchors = ""
suppress_warnings = []
myst_enable_extensions = ""
