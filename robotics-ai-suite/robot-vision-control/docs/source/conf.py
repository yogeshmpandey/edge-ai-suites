#!/usr/bin/env python3
# SPDX-License-Identifier: Apache-2.0
# Copyright (C) 2025 Intel Corporation
# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
import pkg_resources
sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = u''
copyright = u'2024, Intel Corporation'
author = u'Intel Corporation'

# The short X.Y version
version = u''
# The full version, including alpha/beta/rc tags
release = u'RVC'


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.

sys.path.insert(0, os.path.join(os.path.abspath('.'), 'extensions'))

extensions = [
    'sphinx.ext.autosectionlabel',
    'sphinx.ext.graphviz',
    'sphinxcontrib.contentui',
    'sphinxcontrib.spelling',
    'sphinx_tabs.tabs',
    'rst2pdf.pdfbuilder',
    'last_updated',
    'sphinx_multiversion',
    'sphinx_copybutton',
]

# Check if optional modules are installed
optional_modules = {'sphinx2dita'}
installed = {pkg.key for pkg in pkg_resources.working_set}
missing = optional_modules - installed

# Add Sphinx extensions if modules are installed
if not missing:
    extensions += ['sphinx2dita']

extensions += ['breathe']

breathe_projects = {
    "rvc_control": "doxygen/rvc_control/xml/",
    "rvc_vision": "doxygen/rvc_vision/xml/",
}

# Configure copybutton
copybutton_prompt_text = r"\$ "
copybutton_prompt_is_regexp = True
copybutton_only_copy_prompt_lines = False
copybutton_line_continuation_character = "\\"

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# Define dictionary of words which will be considered correctly spelled
# during the spellcheck test
spelling_word_list_filename = 'rvc_dictionary.txt'

# Substitutions
rst_epilog = """.. include:: /substitutions.txt"""

# Pages that should be ignored during the spellcheck
spelling_exclude_patterns=['*packages_list.rst']

# Define a list of URIs which are ignored during the broken link check
linkcheck_ignore = [
]

# All HTTP redirections from the source URI to the canonical URI will be treated as "working"
linkcheck_allowed_redirects = {
    r'https://www.intel.com/content/.*': r'https://corpredirect.intel.com/Redirector/.*'
}

# Header used for used for HTTP access
user_agent = 'Mozilla/5.0 (Linux x86_64; rv:94.0) Gecko/20100101 Firefox/94.0'

# Specify timeout in seconds
linkcheck_timeout = 60

# Specify number of worker threads
linkcheck_workers = 10

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# Do not build branches when using sphinx-multiversion
smv_branch_whitelist = 'None'

# -- Options for DITA XML output ---------------------------------------------

ditaxml_make_flat=True
#ditaxml_flat_map_to_title=True
ditaxml_shorten_alias = True

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
try:
    import sphinx_rtd_theme
except ImportError:
    html_theme = 'alabaster'
    # This is required for the alabaster theme
    # refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
    html_sidebars = {
        '**': [
            'index.html',
            'searchbox.html',
            'home.html',
            ]
        }
    sys.stderr.write('Warning: sphinx_rtd_theme missing. Use pip to install it.\n')
else:
    html_theme = "sphinx_rtd_theme"
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
    html_theme_options = {
        'canonical_url': '',
        'analytics_id': '',
        'logo_only': False,
        'display_version': True,
        'prev_next_buttons_location': 'None',
        # Toc options
        'collapse_navigation': False,
        'sticky_navigation': True,
        'navigation_depth': 5,
    }

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

html_logo = 'images/static/logo.png'
html_favicon = 'images/static/favicon.png'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# If not '', a 'Last updated on:' timestamp is inserted at every page
# bottom,
# using the given strftime format.
html_last_updated_fmt = '%b %d, %Y'

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'RVCdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'RVC.tex', u'RVC Documentation',
     u'Intel', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'rvc', u'RVC Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'RVC', u'RVC Documentation',
     author, 'Intel Corporation', 'RVC Documentation.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

pdf_documents = [('index', u'rst2pdf', u'RVC Documentation', u'Intel Corporation'),]


# Custom last_updated extension for updating last updated date based on git information
# needs to know the folders where the cloned files can be found, relative to
# where the Sphinx .rst build folder

last_updated_git_path = ['.']

