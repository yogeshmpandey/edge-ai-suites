<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>RVC_AI::RVCAIInterface</compoundname>
    <derivedcompoundref refid="class_r_v_c___a_i_1_1_o_i_inference" prot="public" virt="non-virtual">RVC_AI::OIInference</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a0a839a4ed106c72706cb6a38973de0d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool RVC_AI::RVCAIInterface::pre_process_image</definition>
        <argsstring>(const cv::Mat inputImage, cv::Mat &amp;outputImage)=0</argsstring>
        <name>pre_process_image</name>
        <reimplementedby refid="class_r_v_c___a_i_1_1_o_i_inference_1aa424734061f1813aac551bf6564efcaf">pre_process_image</reimplementedby>
        <param>
          <type>const cv::Mat</type>
          <declname>inputImage</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>outputImage</declname>
        </param>
        <briefdescription>
<para>API entry point: define this plugin preprocessing operations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputImage</parametername>
</parameternamelist>
<parameterdescription>
<para>cv::Mat input image to preprocess </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputImage</parametername>
</parameternamelist>
<parameterdescription>
<para>preprocessed output cv::Mat </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success </para>
</simplesect>
<simplesect kind="return"><para>false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="46" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1ad3e276f984317f998145b251b1acdba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool RVC_AI::RVCAIInterface::run_inference_pipeline</definition>
        <argsstring>(const cv::Mat image, cv::Mat &amp;output)=0</argsstring>
        <name>run_inference_pipeline</name>
        <reimplementedby refid="class_r_v_c___a_i_1_1_o_i_inference_1ac9de2c3f5e06c2a1d970e2743652c1b1">run_inference_pipeline</reimplementedby>
        <param>
          <type>const cv::Mat</type>
          <declname>image</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>API entry point: run the inference on input image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>input image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>result output blob in cv::Mat format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success </para>
</simplesect>
<simplesect kind="return"><para>false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="55" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1aad50f1571455622adcbf11244b67b5fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool RVC_AI::RVCAIInterface::post_process_image</definition>
        <argsstring>(const cv::Mat input, rvc_vision_messages::msg::RotatedBBList &amp;rotatedBBList)=0</argsstring>
        <name>post_process_image</name>
        <reimplementedby refid="class_r_v_c___a_i_1_1_o_i_inference_1a189c86fa5755e322bc73ab34d1463ab4">post_process_image</reimplementedby>
        <param>
          <type>const cv::Mat</type>
          <declname>input</declname>
        </param>
        <param>
          <type>rvc_vision_messages::msg::RotatedBBList &amp;</type>
          <declname>rotatedBBList</declname>
        </param>
        <briefdescription>
<para>API entry point: define the post processing to perform to retrieve the rotate bounding boxes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input blob cv::Mat </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotatedBBList</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotate Bounding box list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success </para>
</simplesect>
<simplesect kind="return"><para>false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="64" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a459a971143e9947a67ab4d16750f4304" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool RVC_AI::RVCAIInterface::init</definition>
        <argsstring>(rclcpp::Node *node, const std::string &amp;modelName)=0</argsstring>
        <name>init</name>
        <reimplementedby refid="class_r_v_c___a_i_1_1_o_i_inference_1a7ed98def3e15c9d40d26dd3151d147d6">init</reimplementedby>
        <param>
          <type>rclcpp::Node *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>modelName</declname>
        </param>
        <briefdescription>
<para>API entry: plugin initialization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Ros node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modelName</parametername>
</parameternamelist>
<parameterdescription>
<para>input file name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success </para>
</simplesect>
<simplesect kind="return"><para>false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="74" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a07c5979b6c062d279fda2a75c46c8e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool RVC_AI::RVCAIInterface::on_shutdown</definition>
        <argsstring>()</argsstring>
        <name>on_shutdown</name>
        <briefdescription>
<para>API entry: operation to clean up upon node shutdown. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="81" column="18" bodyfile="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a09c3ea974dba8c813444ef238b1e2065" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual RVC_AI::RVCAIInterface::~RVCAIInterface</definition>
        <argsstring>()</argsstring>
        <name>~RVCAIInterface</name>
        <briefdescription>
<para>Destroy the <ref refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface" kindref="compound">RVCAIInterface</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="90" column="13" bodyfile="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1ad0bdc4b8803c28cdfe7990cf1dcae78f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RVC_AI::RVCAIInterface::RVCAIInterface</definition>
        <argsstring>()</argsstring>
        <name>RVCAIInterface</name>
        <briefdescription>
<para>Empty Constructor for pluginlib. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>a rclcpp node shared pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="95" column="5" bodyfile="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a21b9b49c879be6b13438bb12c9c8df26" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RVC_AI::RVCAIInterface::RVCAIInterface</definition>
        <argsstring>(const RVCAIInterface &amp;)</argsstring>
        <name>RVCAIInterface</name>
        <param>
          <type>const <ref refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface" kindref="compound">RVCAIInterface</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Private copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="99" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a3248efb291c88a9c5b79b649c2eeb016" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface" kindref="compound">RVCAIInterface</ref> &amp;</type>
        <definition>RVCAIInterface&amp; RVC_AI::RVCAIInterface::operator=</definition>
        <argsstring>(const RVCAIInterface &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface" kindref="compound">RVCAIInterface</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Private copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="102" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RVC_AI::RVCAIInterface</label>
        <link refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface"/>
      </node>
      <node id="2">
        <label>RVC_AI::OIInference</label>
        <link refid="class_r_v_c___a_i_1_1_o_i_inference"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" line="34" column="1" bodyfile="rvc_object_detection/rvc_ai_interface/include/rvc_ai_interface.hpp" bodystart="35" bodyend="104"/>
    <listofallmembers>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a459a971143e9947a67ab4d16750f4304" prot="public" virt="pure-virtual"><scope>RVC_AI::RVCAIInterface</scope><name>init</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a07c5979b6c062d279fda2a75c46c8e7a" prot="public" virt="virtual"><scope>RVC_AI::RVCAIInterface</scope><name>on_shutdown</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a3248efb291c88a9c5b79b649c2eeb016" prot="private" virt="non-virtual"><scope>RVC_AI::RVCAIInterface</scope><name>operator=</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1aad50f1571455622adcbf11244b67b5fe" prot="public" virt="pure-virtual"><scope>RVC_AI::RVCAIInterface</scope><name>post_process_image</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a0a839a4ed106c72706cb6a38973de0d4" prot="public" virt="pure-virtual"><scope>RVC_AI::RVCAIInterface</scope><name>pre_process_image</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1ad3e276f984317f998145b251b1acdba9" prot="public" virt="pure-virtual"><scope>RVC_AI::RVCAIInterface</scope><name>run_inference_pipeline</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1ad0bdc4b8803c28cdfe7990cf1dcae78f" prot="protected" virt="non-virtual"><scope>RVC_AI::RVCAIInterface</scope><name>RVCAIInterface</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a21b9b49c879be6b13438bb12c9c8df26" prot="private" virt="non-virtual"><scope>RVC_AI::RVCAIInterface</scope><name>RVCAIInterface</name></member>
      <member refid="class_r_v_c___a_i_1_1_r_v_c_a_i_interface_1a09c3ea974dba8c813444ef238b1e2065" prot="public" virt="virtual"><scope>RVC_AI::RVCAIInterface</scope><name>~RVCAIInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
