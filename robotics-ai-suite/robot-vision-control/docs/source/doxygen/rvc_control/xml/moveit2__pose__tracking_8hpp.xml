<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="moveit2__pose__tracking_8hpp" kind="file" language="C++">
    <compoundname>moveit2_pose_tracking.hpp</compoundname>
    <includes local="no">moveit_servo/make_shared_from_pool.h</includes>
    <includes local="no">moveit_servo/servo_parameters.h</includes>
    <includes local="no">moveit_servo/servo.h</includes>
    <includes local="no">tf2_geometry_msgs/tf2_geometry_msgs.hpp</includes>
    <includes local="no">tf2_ros/transform_listener.h</includes>
    <includes local="no">rclcpp/rclcpp.hpp</includes>
    <includes local="no">geometry_msgs/msg/twist_stamped.hpp</includes>
    <includes local="no">std_msgs/msg/float64.hpp</includes>
    <includedby refid="moveit2__servo__motion__controller_8hpp" local="yes">rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_servo_motion_controller.hpp</includedby>
    <includedby refid="moveit2__pose__tracking_8cpp" local="yes">rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/src/moveit2_pose_tracking.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>moveit_servo/make_shared_from_pool.h</label>
      </node>
      <node id="7">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="8">
        <label>geometry_msgs/msg/twist_stamped.hpp</label>
      </node>
      <node id="4">
        <label>moveit_servo/servo.h</label>
      </node>
      <node id="1">
        <label>rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp</label>
        <link refid="moveit2__pose__tracking_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="5">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.hpp</label>
      </node>
      <node id="3">
        <label>moveit_servo/servo_parameters.h</label>
      </node>
      <node id="6">
        <label>tf2_ros/transform_listener.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp</label>
        <link refid="moveit2__pose__tracking_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_servo_motion_controller.hpp</label>
        <link refid="moveit2__servo__motion__controller_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_pose_tracking" prot="public">PoseTracking</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="moveit2__pose__tracking_8hpp_1ae5ec5dc9de82c6eb162c85642d42d26f" prot="public" static="no" strong="yes">
        <type>int8_t</type>
        <name>PoseTrackingStatusCode</name>
        <enumvalue id="moveit2__pose__tracking_8hpp_1ae5ec5dc9de82c6eb162c85642d42d26faccc0377a8afbf50e7094f5c23a8af223" prot="public">
          <name>INVALID</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="moveit2__pose__tracking_8hpp_1ae5ec5dc9de82c6eb162c85642d42d26fad0749aaba8b833466dfcbb0428e4f89c" prot="public">
          <name>SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="moveit2__pose__tracking_8hpp_1ae5ec5dc9de82c6eb162c85642d42d26faf77af10d8b1feddc0022171332669886" prot="public">
          <name>NO_RECENT_TARGET_POSE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="moveit2__pose__tracking_8hpp_1ae5ec5dc9de82c6eb162c85642d42d26faacbb405b2f165c94eb2b620fde610f0b" prot="public">
          <name>NO_RECENT_END_EFFECTOR_POSE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="moveit2__pose__tracking_8hpp_1ae5ec5dc9de82c6eb162c85642d42d26fa890150b688f0819a3bbda52dd2df8f80" prot="public">
          <name>STOP_REQUESTED</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp" line="55" column="1" bodyfile="rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp" bodystart="56" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="moveit2__pose__tracking_8hpp_1a255d374a2630f551183d97d636422a77" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_pose_tracking" kindref="compound">PoseTracking</ref> &gt;</type>
        <definition>using PoseTrackingPtr =  std::shared_ptr&lt;PoseTracking&gt;</definition>
        <argsstring></argsstring>
        <name>PoseTrackingPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp" line="182" column="1" bodyfile="rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="moveit2__pose__tracking_8hpp_1ae200fe9ff44b3ab4184dc306fde97037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; PoseTrackingStatusCode, std::string &gt;</type>
        <definition>const std::unordered_map&lt;PoseTrackingStatusCode, std::string&gt; POSE_TRACKING_STATUS_CODE_MAP</definition>
        <argsstring>({ { PoseTrackingStatusCode::INVALID, &quot;Invalid&quot; }, { PoseTrackingStatusCode::SUCCESS, &quot;Success&quot; }, { PoseTrackingStatusCode::NO_RECENT_TARGET_POSE, &quot;No recent target pose&quot; }, { PoseTrackingStatusCode::NO_RECENT_END_EFFECTOR_POSE, &quot;No recent end effector pose&quot; }, { PoseTrackingStatusCode::STOP_REQUESTED, &quot;Stop requested&quot; } })</argsstring>
        <name>POSE_TRACKING_STATUS_CODE_MAP</name>
        <param>
          <type>{ { PoseTrackingStatusCode::INVALID, &quot;Invalid&quot; }, { PoseTrackingStatusCode::SUCCESS, &quot;Success&quot; }, { PoseTrackingStatusCode::NO_RECENT_TARGET_POSE, &quot;No recent target pose&quot; }, { PoseTrackingStatusCode::NO_RECENT_END_EFFECTOR_POSE, &quot;No recent end effector pose&quot; }, { PoseTrackingStatusCode::STOP_REQUESTED, &quot;Stop requested&quot; } }</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp" line="64" column="26" declfile="rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp" declline="64" declcolumn="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2020,<sp/>PickNik<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>PickNik<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>Author:<sp/>Andy<sp/>Zelenak</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>Desc:<sp/>Servoing.<sp/>Track<sp/>a<sp/>pose<sp/>setpoint<sp/>in<sp/>real<sp/>time.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit_servo/make_shared_from_pool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit_servo/servo_parameters.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit_servo/servo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_geometry_msgs/tf2_geometry_msgs.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_ros/transform_listener.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rclcpp/rclcpp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/twist_stamped.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/msg/float64.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conventions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculations<sp/>are<sp/>done<sp/>in<sp/>the<sp/>planning_frame_<sp/>unless<sp/>otherwise<sp/>noted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>PoseTrackingStatusCode<sp/>:<sp/>int8_t</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>INVALID<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>SUCCESS<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>NO_RECENT_TARGET_POSE<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>NO_RECENT_END_EFFECTOR_POSE<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>STOP_REQUESTED<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;PoseTrackingStatusCode,<sp/>std::string&gt;<sp/>POSE_TRACKING_STATUS_CODE_MAP(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>{<sp/>PoseTrackingStatusCode::INVALID,<sp/></highlight><highlight class="stringliteral">&quot;Invalid&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>PoseTrackingStatusCode::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>PoseTrackingStatusCode::NO_RECENT_TARGET_POSE,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>recent<sp/>target<sp/>pose&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>PoseTrackingStatusCode::NO_RECENT_END_EFFECTOR_POSE,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>recent<sp/>end<sp/>effector<sp/>pose&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>PoseTrackingStatusCode::STOP_REQUESTED,<sp/></highlight><highlight class="stringliteral">&quot;Stop<sp/>requested&quot;</highlight><highlight class="normal"><sp/>}<sp/>});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_pose_tracking" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pose_tracking" kindref="compound">PoseTracking</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="class_pose_tracking_1a03044e3ae81a921cd3a1c99b7b3f51ca" kindref="member">PoseTracking</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp::Node::SharedPtr&amp;<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>moveit_servo::ServoParameters::SharedConstPtr&amp;<sp/>servo_parameters,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>planning_scene_monitor::PlanningSceneMonitorPtr&amp;<sp/>planning_scene_monitor);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>PoseTrackingStatusCode<sp/>moveToPose();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGoalAchieved()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>goalAchieved;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pose_tracking_1ad3cf9cbf97086a8b30da4ce3731cfe2c" kindref="member">stopMotion</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bool<sp/>getCommandFrameTransform(geometry_msgs::msg::TransformStamped&amp;<sp/>transform);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pose_tracking_1ac61ae07521fc52db7b3aa9c7d85a122b" kindref="member">getCommandFrameTransform</ref>(Eigen::Isometry3d&amp;<sp/>transform);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pose_tracking_1aa0c00f7fe84a6916466ade74bf7266fe" kindref="member">resetTargetPose</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>moveit_servo::Servo<sp/>instance.<sp/>Public<sp/>so<sp/>we<sp/>can<sp/>access<sp/>member<sp/>functions<sp/>like<sp/>setPaused()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;moveit_servo::Servo&gt;<sp/>servo_;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readROSParams();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveRecentTargetPose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveRecentEndEffectorPose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>satisfiesPoseTolerance();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pose_tracking_1a67f56b8baea910817c9c476466e4478a" kindref="member">setTargetPose</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::msg::PoseStamped::ConstSharedPtr&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSpeed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>speed);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getGripperPositionFeedback(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;rclcpp::ParameterEventHandler&gt;<sp/>param_subscriber_;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::TwistStamped::ConstSharedPtr<sp/>calculateTwistCommand();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPostMotionReset();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>rclcpp::Node::SharedPtr<sp/>node_;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>moveit_servo::ServoParameters::SharedConstPtr<sp/>servo_parameters_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>publish_period;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>planning_scene_monitor::PlanningSceneMonitorPtr<sp/>planning_scene_monitor_;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>moveit::core::RobotModelConstPtr<sp/>robot_model_;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Joint<sp/>group<sp/>used<sp/>for<sp/>controlling<sp/>the<sp/>motions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>std::string<sp/>manipulator_move_group_name_;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>std::string<sp/>gripper_move_group_name_;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>std::string<sp/>gripper_joint_name_;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>rclcpp::WallRate<sp/>loop_rate_;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ROS<sp/>interface<sp/>to<sp/>Servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>rclcpp::Publisher&lt;geometry_msgs::msg::TwistStamped&gt;::SharedPtr<sp/>twist_stamped_pub_;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transforms<sp/>w.r.t.<sp/>planning_frame_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>Eigen::Isometry3d<sp/>command_frame_transform_;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>rclcpp::Time<sp/>command_frame_transform_stamp_<sp/>=<sp/>rclcpp::Time(0,<sp/>0,<sp/>RCL_ROS_TIME);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::PoseStamped<sp/>target_pose_;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>controllerSpeed;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::mutex<sp/>target_pose_mtx_;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscribe<sp/>to<sp/>target<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//rclcpp::Subscription&lt;geometry_msgs::msg::PoseStamped&gt;::SharedPtr<sp/>target_pose_sub_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>transform_buffer_;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>tf2_ros::TransformListener<sp/>transform_listener_;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Expected<sp/>frame<sp/>name,<sp/>for<sp/>error<sp/>checking<sp/>and<sp/>transforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>std::string<sp/>planning_frame_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>that<sp/>a<sp/>different<sp/>thread<sp/>has<sp/>requested<sp/>a<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>std::atomic&lt;bool&gt;<sp/>stop_requested_;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>std::optional&lt;double&gt;<sp/>angular_error_;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tfBuffer;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>tf2_ros::TransformListener<sp/>listener;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>positional_tolerance;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angular_tolerance;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>goalAchieved;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstSetTargetReceived;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>alias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PoseTrackingPtr<sp/>=<sp/>std::shared_ptr&lt;PoseTracking&gt;;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="rvc_dynamic_motion_controller/rvc_motion_controller_plugins/moveit2_servo_motion_controller/include/moveit2_servo_motion_controller/moveit2_pose_tracking.hpp"/>
  </compounddef>
</doxygen>
