<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="arm">
   <!-- robot name parameter -->
   <xacro:arg name="name" default="ur"/>
   <!-- import main macro -->
   <xacro:include filename="$(find robot_config)/urdf/ur/ur5/ur_macro.xacro"/>

   <!-- possible 'ur_type' values: ur3, ur3e, ur5, ur5e, ur10, ur10e, ur16e -->
   <!-- the default value should raise an error in case this was called without defining the type -->
   <xacro:arg name="ur_type" default="ur5"/>

   <!-- parameters -->
   <xacro:arg name="prefix" default="" />
   <xacro:arg name="joint_limit_params" default="$(find robot_config)/config/ur/$(arg ur_type)/joint_limits.yaml"/>
   <xacro:arg name="kinematics_params" default="$(find robot_config)/config/ur/$(arg ur_type)/default_kinematics.yaml"/>
   <xacro:arg name="physical_params" default="$(find robot_config)/config/ur/$(arg ur_type)/physical_parameters.yaml"/>
   <xacro:arg name="visual_params" default="$(find robot_config)/config/ur/$(arg ur_type)/visual_parameters.yaml"/>
   <xacro:arg name="transmission_hw_interface" default=""/>
   <xacro:arg name="safety_limits" default="false"/>
   <xacro:arg name="safety_pos_margin" default="0.15"/>
   <xacro:arg name="safety_k_position" default="20"/>
   <!-- ros2_control related parameters -->
   <xacro:arg name="headless_mode" default="false" />
   <xacro:arg name="robot_ip" default="0.0.0.0" />
   <xacro:arg name="script_filename" default=""/>
   <xacro:arg name="output_recipe_filename" default=""/>
   <xacro:arg name="input_recipe_filename" default=""/>
   <!--   tool communication related parameters-->
   <xacro:arg name="use_tool_communication" default="false" />
   <xacro:arg name="tool_voltage" default="24" />
   <xacro:arg name="tool_parity" default="0" />
   <xacro:arg name="tool_baud_rate" default="115200" />
   <xacro:arg name="tool_stop_bits" default="1" />
   <xacro:arg name="tool_rx_idle_chars" default="1.5" />
   <xacro:arg name="tool_tx_idle_chars" default="3.5" />
   <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
   <xacro:arg name="tool_tcp_port" default="54321" />

     <!-- Simulation parameters -->
   <xacro:arg name="use_fake_hardware" default="false" />
   <xacro:arg name="fake_sensor_commands" default="false" />
   <xacro:arg name="sim_gazebo" default="false" />
   <xacro:arg name="sim_ignition" default="false" />
   <xacro:arg name="simulation_controllers" default="" />

   <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
   <xacro:arg name="initial_positions_file" default="$(find robot_config)/config/ur/$(arg ur_type)/initial_positions.yaml"/>
   <xacro:arg name="namespace" default=""/>
   <xacro:arg name="pedestal_height" default=".32"/>
   <xacro:arg name="vacuum_gripper" default="true"/>
   <xacro:arg name="finger_gripper" default="false"/>


   <!-- convert to property to use substitution in function -->
   <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

   <!-- create link fixed to the "world" -->
   <link name="world" />

   <!-- arm -->
   <xacro:ur_robot
     name="$(arg name)"
     prefix="$(arg prefix)"
     parent="$(arg prefix)pedestal"
     joint_limits_parameters_file="$(arg joint_limit_params)"
     kinematics_parameters_file="$(arg kinematics_params)"
     physical_parameters_file="$(arg physical_params)"
     visual_parameters_file="$(arg visual_params)"
     transmission_hw_interface="$(arg transmission_hw_interface)"
     safety_limits="$(arg safety_limits)"
     safety_pos_margin="$(arg safety_pos_margin)"
     safety_k_position="$(arg safety_k_position)"
     use_fake_hardware="$(arg use_fake_hardware)"
     fake_sensor_commands="$(arg fake_sensor_commands)"
     sim_gazebo="$(arg sim_gazebo)"
     sim_ignition="$(arg sim_ignition)"
     headless_mode="$(arg headless_mode)"
     initial_positions="${load_yaml(initial_positions_file)}"
     use_tool_communication="$(arg use_tool_communication)"
     tool_voltage="$(arg tool_voltage)"
     tool_parity="$(arg tool_parity)"
     tool_baud_rate="$(arg tool_baud_rate)"
     tool_stop_bits="$(arg tool_stop_bits)"
     tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
     tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
     tool_device_name="$(arg tool_device_name)"
     tool_tcp_port="$(arg tool_tcp_port)"
     robot_ip="$(arg robot_ip)"
     script_filename="$(arg script_filename)"
     output_recipe_filename="$(arg output_recipe_filename)"
     input_recipe_filename="$(arg input_recipe_filename)"
     >
     <origin rpy="0 0 0.0" xyz="0 0 ${$(arg pedestal_height)/2}"/>          <!-- position robot in the world -->
   </xacro:ur_robot>

   <xacro:if value="$(arg sim_gazebo)">
    <!-- Gazebo plugins -->
      <gazebo reference="world">
      </gazebo>
      <link name="$(arg prefix)ground_plane_box">
          <visual>
            <origin xyz="0 0 -0.01" rpy="0 0 0"/>
            <geometry>
              <box size="2.0 2.0 0.02"/>
            </geometry>
            <material name="Grey">
              <color rgba="0.7 0.7 0.7 1.0"/>
            </material>
          </visual>
          <collision>
            <origin xyz="0 0 -0.01" rpy="0 0 0"/>
            <geometry>
              <box size="2.0 2.0 0.02"/>
            </geometry>
          </collision>
      </link>
      <joint name="$(arg prefix)ground_plane_box" type="fixed">
        <parent link="world" />
        <child link="$(arg prefix)ground_plane_box" />
        <origin xyz="0 0 0.0" rpy="0 0 0" />
      </joint>
      <link name="$(arg prefix)pedestal">
        <visual>
          <origin rpy="0 0 0.0" xyz="0 0 0"/>
          <geometry>
            <cylinder radius="0.1" length="$(arg pedestal_height)"/>
          </geometry>
          <material name="Grey">
            <color rbga="0.5 0.5 0.5"/>
          </material>
        </visual>
        <collision>
          <origin rpy="0 0 0" xyz="0 0 0.0"/>
          <geometry>
            <cylinder radius="0.1" length="$(arg pedestal_height)"/>
          </geometry>
        </collision>
        <inertial>
          <mass value="120"/>
          <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
          <inertia ixx="200" ixy="200" ixz="200" iyy="200" iyz="200" izz="200"/>
        </inertial>
      </link>
      <gazebo reference="$(arg prefix)pedestal">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Orange</material>
      </gazebo>
      <joint name="$(arg prefix)world_joint" type="fixed">
        <parent link="world"/>
        <child link="$(arg prefix)pedestal"/>
        <origin rpy="0.0 0.0 0.0" xyz="0 0 ${$(arg pedestal_height)/2}"/>
      </joint>
      <xacro:if value="$(arg vacuum_gripper)">
        <xacro:include filename="$(find robot_config)/urdf/ur/ur5/ur_vacuum.xacro" />
      </xacro:if>
      <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <ros>
            <namespace>$(arg namespace)</namespace>
          </ros>
          <parameters>$(arg simulation_controllers)</parameters>
        </plugin>
      </gazebo>
      
  </xacro:if>

  <xacro:if value="$(arg sim_ignition)">
    <!-- Gazebo plugins -->
    <gazebo reference="world">
 
    </gazebo>
    <gazebo>
      <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <parameters>$(arg simulation_controllers)</parameters>
        <controller_manager_node_name>$(arg prefix)controller_manager</controller_manager_node_name>
      </plugin>
    </gazebo>
  </xacro:if>

<!-- Future reference code to enable camera on the arm-->
<!--
<xacro:include filename="$(find robot_config)/urdf/ur/ur5/camera.xacro"/>
<xacro:cam name="top_camera" parent="$(arg prefix)pedestal" xyz="0.7 0.0 0.6" rpy="0 1.57 0.0" rate="20.0" type="depth" />
<xacro:cam name="side_camera" parent="$(arg prefix)pedestal" xyz="1.5 0.0 .15" rpy="3.14 3.14 0.0" rate="20.0" />
<xacro:cam name="head_camera" parent="$(arg prefix)wrist_3_link" xyz="0.0 -0.02 0.0" rpy="0.0 -1.57 1.57" rate="1.0" radius="0.003" length="0.0001" />
-->
<!--
 <gazebo reference="camera_link1">
    <sensor name="robot_camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="robot_camera1">
        <pose>0 0 0 0 0 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>1024</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller1">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>robot_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link1</frameName>
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <link name="camera_link1">
    <visual>
      <geometry>
        <mesh filename="package://kinova_description/meshes/DAE/camera/camera.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://kinova_description/meshes/STL/camera/camera.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00001" iyz="0" izz="0.00001"/>
    </inertial>
  </link>
  <joint name="camera_joint1" type="fixed">
    <origin rpy="0 0.785398185 -1.57079637" xyz="0.0 1.5 1.0"/>
    <parent link="world"/>
    <child link="camera_link1"/>
  </joint>
  -->
</robot>
